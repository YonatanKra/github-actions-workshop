name: CI

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup NodeJS 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            /home/runner/.cache/Cypress
            **/node_modules
          key: our-cache-yarn-${{ hashFiles('**/yarn.lock.json') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

  deploy-demo:
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            /home/runner/.cache/Cypress
            **/node_modules
          key: our-cache-yarn-${{ hashFiles('**/yarn.lock.json') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build Site
        run: yarn build --prod

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "github-actions-workshop-99"
          entrypoint: https://deno.land/std/http/file_server.ts
          root: dist/apps/unicorn-hunt

  lint:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup NodeJS 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            /home/runner/.cache/Cypress
            **/node_modules
          key: our-cache-yarn-${{ hashFiles('**/yarn.lock.json') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Lint
        run: yarn lint:ci

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup NodeJS 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            /home/runner/.cache/Cypress
            **/node_modules
          key: our-cache-yarn-${{ hashFiles('**/yarn.lock.json') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Test
        run: yarn test:ci

  e2e:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 10
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup NodeJS 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            /home/runner/.cache/Cypress
            **/node_modules
          key: our-cache-yarn-${{ hashFiles('**/yarn.lock.json') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: e2e
        run: yarn e2e

      - run: exit 0
        if: ${{ steps.e2e.outcome == 'success' }}


